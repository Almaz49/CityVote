# Описание проекта  
Бот для верифицированного голосования в телеграм-группах.
Его фукнции:
- Регистрация участников с верификацией
- Возможность участнику самостоятельно выбрать роль Представителя (со взятием на себя определенных обязетельств)
- Возможность участника выбрать себе Представителя (возможна привязка права голоса к тому, выбран Представитель или нет)
- Каждый участник может голосовать в любом голосовании (если обладает правом голоса)
- Представитель голосует своим голосом и голосами тех участников, которые доверили ему свой голос но не приняли участие сами в голосовании.
- Представитель может делать рассылку своим "подписчикам" через бота.
- Представитель может назначить себе заместителя (из числа участников группы), который может голосовать от имени Представителя, когда тот не голосует сам.
- Если представитель пропустил два голосования подряд, его права Представителя приостанавливаются, его "подписчикам" приходит предложение выбрать себе другого Представителя.
- Если у Представителя голосов больше определенного порога (в абсолютном числе или в проценте от числа участников), он получает права Делегата.
- Делегат может создавать голосования и добавлять к ним варианты решений. Также он получает право писать в основной телеграм-канал группы (через бота).
- Голосование:
    - Объявление о создании голосования появляется в телеграм канале и приходит от имени бота тем пользователям, кто подписался на все объявления. 
    - 1-й этап. Некоторое время (сутки? двое?) проходит набор вариантов для голосования. После чего голосование запускается автоматически.
    - 2-й этап. Некоторое время (сутки?) голосуются все предложенные варианты. Каждый участник (представитель, Делегат) может в любое время как проголосовать за любой из вариантов, так и переголосовать.
    - 3-й этап. Некоторое время (сутки, двое, только в дневное время?) из голосования по очереди выбывают самые непопулярные варианты. Тем участникам (представителям), которые голосовали за выбывшие варианты приходит об этом сообщение с предложением выбрать один из оставшихся вариантов. Так продолжается пока не останется два варианта.
    - 4-й этап. Некоторое время участники выбирают один из двух вариантов.
    - 5-й этап. Некоторое время голосуется вариант-победитель и вариант "против всех" (Лучше никакого решения).
- Голосования могут быть нескольких типов:
    - Обычное (описано выше)
    - Референдум. Один вариант - за или против. Может применяться при утверждении итогов голосования
    - Экспресс-голосование (всё тоже самое но в сжатые сроки)
    - Опрос (голосуют только участники напрямую, без помощи представителей, варианты не удаляются и не добавляютя после первоначального создания)
      
      
## Роли участников
- Участник:
  - Может пройти регистрацию и получить право голоса
  - Может голосовать за тот или иной вариант в идущем голосовании, может менять выбранный вариант в ходе голосования.
  - Может выбирать Представителя. Может менять Представителя.
  - Может стать Представителем.
- Представитель (proxy):
  - Может голосовать за себя и своих "подписчиков" (тех, участников, кто его выбрал но не проголосвал сам)
  - Может делать рассылку через бота своим "подписчикам"
  - Может "уйти в отставку"
  - Может стать Делегатом (если получит больше определенного числа "полписчиков")
- Делегат (delegate):
  - Обладает правами Представителя
  - Может создавать голосование
  - Может добавлять к голосованию варианты решений (пока действует период добавления)
- Регистратор:
  - Может верифицировать участников
- Администратор:
  - Может давать и лишать статусов других участников (и самого себя)
  - Может банить на время участников
  - Может удалять голосования и варианты решений
      
Участники могут совмещать несколько ролей.
      
# Описание базы данных
Логика БД состоит в том, что использовать ее могут разные платформы (не только телеграмм-боты). А также на одной БД могут находиться несколько групп, некоторые из которых являются подгруппами. Любой член подгруппы автоматически является членом материнской группы (но не наоборот). В будущем будет опция слияния групп (создания на базе двух групп материнской). И опция создания подгруппы. Пока бот будет писаться в логике работы одной-единственной группы, но для сохранения возможностей будут сразу созданы необходимые таблицы. Пока на каждую группу (в БД) – свой бот.
      
## Таблица Users
Таблица всех пользователей всех групп, которые входят в данную БД.
Профиль юзера. Поля: id, телеграм id, телефон, тг-имя, тг-фамилия (предыдущие 4 поля добываются из карточки контакта), Имя. Отчество, Фамилия, год рождения (на случай если день и месяц не спрашиваем), фото, e-mail
      
## Таблица Members
Таблица членов группы.
Список полей:
- id
- группа-id (здесь и далее – наличие ‘id’ в конце названия ознаает внешний ключ)
- юзер-id (внешний ключ)
- представитель, которого выбрал член (тоже участник этой группы)
- количество голосов (опция для будущего, например, ТСЖ)
- описание (опция для представителей, но наверно и сами участники могут что-то про себя написать)
- ссылка-id внешний ключ (на таблицу ссылок). Типа, главная ссылка (еще возможна связь со стороны ссылок)
      
## Таблица Clubs
Таблица групп.
Группа должна иметь уникальное название. Также она может иметь описание, ссылку на какой-то ресурс. Группы могут быть материнские и дочерние. Каждый член дочерней группы является членом материнской.  tg_bot - название и ID бота, обслуживающего группу.
Поля:
- id
- description
- link_id
- father_group (внешний ключ на саму таблицу Clubs). "Материнская группа".
- tg_bot (текстовое поле)
      
## Таблица Status
Таблица статусов участников.
Один участник может иметь несколько статусов. Каждый статус дает какие-то права.
Поля:
- id
- member_id (внешний ключ)
- status (текстовое поле)
     
## Таблица Tokens
Уникальные токены, которые выдаются пользователям для регистрации или подтверждения каких-то действий. Указывается создатель токена (обычно это админ или модератор).
Поля:
- id
- token – неповторяющийся набор символов, который может выдаваться пользователям для подтверждения идентичности
- club - группа, для которой выпущен токен (в принципе, вычисляется через креатора)
- creator - создатель токена (обычно админ или модератор)
- status - статус, который присваивется пользователю после введения токена
- validity - срок годности самого токена (после какой даты перестает приниматься)
- time_of_action - время действия прав, которые дает токен
- number_of_possible - число пользователей, которые могут воспользоваться токеном
- sity - город (здесь и далее - информация, которая может быть привязана к токену, например, по месту его распространения, могут быть использованы поля частично или вовсе не использованы)
- district - район города
- street - улица
- house - номер дома
- entrance - номер подъезда
- apartment - номер квартиры
- telephon_number (здесь и далее информация, которая привязана к конкретному получателю токена при выдаче токена, может быть подтверждена пользователем при регистрации)
- first_name - имя
- lust_name - фамилия
- polling_station - номер избирательного участка
- lot - номер партии токенов (когда их печатают оптом)
- number_in_lot порядковый номер токена в партии
      
## Таблица Registrations
Таблица регистраций.
- member_id - кого зарегистрировали
- registrator - кто зарегистрировал
- token_id - если при регистрации использовался уникальный токен
- status - какой статус был присвоен в результате регистрационной записи. Если статус был снят - not_(status)
      
## Таблица Links
Таблица используемых участниками и группами ссылок (в своих описаниях, голосованиях и вариантах). 
Поля:
- id
- link_href
- link_title
- link_text (атрибуты ссылки)
- member_id (используется, если ссылку использует какой-то участник, например, предсставитель)
- vote_id (если ссылка используется при создании голосования)
- variant_id (если ссылка используется в описании варианта)
- user_id (если ссылка используется в профиле юзера, например, его соцсети - опция на будущее)
- club_id (если ссылка используется в описании группы)
      
## Таблица Votes
Таблица голосований. Одна строка - одно голосование.
Поля:
- id
- creator - создатель (из числа участников чата)
- vote_type - тип голосования
- title - название голосования
- text - текст объяснения что-за голосование и зачем
- vote_status - статус голосования (завершилось, идет сбор вариантов, идет голосование) ('add_variants','ongoing','finished')
- time_create - время создания
- time_start - время старта голосования за варианты
- starter - тот, кто завершил этап сбора вариантов и запустил голосование (опционально)
- time_finish_1 - время завершения первого тура голосования
- finisher_1 - тот, кто завершил первый тур
- time_close - время завершения голосования
- closer - тот, кто завершил голосование
- club_id - в принципе, она вычисляема через создатель-группа. Нужна для читаемости, но не факт ))
- result - вариант, победивший в голосовании (внешняя ссылка на таблицу вариантов)
- link_id
      
## Таблица Variants
Вариант решения для голосования. Предполагает короткое название title, текст решения text, ссылка на разъяснение link (или на полный текст, если он не влез в ограничения)
Поля:
- id
- vote_id
- author - создатель варианта (вешний ключ на Members)
- title - название
- text - текст
- time_create - временная метка (момент создания)
- link_id
- variant_status - статус варианта. Если он "проиграл" и выбыл из голосования - "loser"
- directly_votes - число голосов, поданых на данный момент за вариант напрямую членами 
- proxy_votes - число голосов, поданых через представилей
- users_votes - число голосов, поданых напрямую участниками, не имеющими права голоса
