from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
#from aiogram.fsm.storage.memory import MemoryStorage

"""
Здесь у нас машины состояний
"""

#FSM создания нового модератора
# Cоздаем класс, наследуемый от StatesGroup, для группы состояний нашей FSM
class FSMNewRegistrator(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_ID_NewRegistrator = State()        # Состояние ожидания ввода ID
    fill_OK = State()         # Состояние ожидания подтверждения
    
#FSM создания присвоения нового статуса участникугруппы
# Cоздаем класс, наследуемый от StatesGroup, для группы состояний нашей FSM
class FSMNewStatus(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_ID_User = State()        # Состояние ожидания ввода ID
    fill_OK = State()         # Состояние ожидания подтверждения
    fill_choice = State()  # Состояние ожидания выбора статуса
    fill_new_status_confirm = State() # Состояние ожидания подтверждения выбранного статуса
    


#FSM процедуры регистрации
   
class FSMRegistration(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_name = State()        # Состояние ожидания ввода имени
    fill_last_name = State()   # Состояние ожидания ввода фамилии
    fill_age = State()         # Состояние ожидания ввода возраста
    fill_gender = State()      # Состояние ожидания выбора пола
    fill_contact = State()     # Состояние ожидания отправки контакта
    fill_confirm1 = State()    # Состояние ожидания подтверждения личных данных
    fill_city = State()        # Состояние ожидания выбора города
    fill_new_city = State()    # Состояние ожидания ввода города не из списка
    fill_street = State()      # Состояние ожидания ввода улицы
    fill_yes_mkd  = State()    # Состояние ожидания выбора МКД или  частный дом
    fill_number_mkd = State()  # Состояние ожидания ввода номера дома
    fill_range_num = State()   # Состояние ожидания выбора диапазона номеров
    fill_confirm2 = State()    # Состояние ожидания подтверждения адреса
    fill_registrator = State()   # Состояние ожидания выбора модератора
    
#FSM повторной регистрации
# Cоздаем класс, наследуемый от StatesGroup, для группы состояний нашей FSM
class FSMRereg(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_OK = State()         # Состояние ожидания подтверждения
    fill_no_reg = State()              # Состояние обновления данных - без регистрации (не вызывается выбор регистраторов)
    

#FSM создания нового голосования
# Cоздаем класс, наследуемый от StatesGroup, для группы состояний нашей FSM
class FSMNewVoting(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_vote_title = State()        # Состояние ожидания ввода названия голосования
    fill_vote_description = State()         # Состояние ожидания описания голосования
#     fill_variant = State()          #Состояние ожидания ввода варианта
    fill_OK = State()         # Состояние ожидания подтверждения

#FSM создания нового варианта голосования
# Cоздаем класс, наследуемый от StatesGroup, для группы состояний нашей FSM
class FSMNewVariant(StatesGroup):
    # Создаем экземпляры класса State, последовательно
    # перечисляя возможные состояния, в которых будет находиться
    # бот в разные моменты взаимодействия с пользователем
    fill_vote_choise = State()        # Состояние ожидания выбора голоосования
    fill_variant_title = State()        # Состояние ожидания ввода названия варианта
    fill_variant_description = State()         # Состояние ожидания описания варианта
    fill_OK = State()         # Состояние ожидания подтверждения
    fill_more_variant = State()        # Состояние ожидания выбора добавлять еще вариант или нет